# Generated from C:/git/pynescript/src/pynescript/ast/grammar/antlr4/resource/PinescriptLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


if "." in __name__:
    from .PinescriptLexerBase import PinescriptLexerBase
else:
    from PinescriptLexerBase import PinescriptLexerBase

def serializedATN():
    return [
        4,0,63,614,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,
        2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,
        16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
        18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,
        21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,
        23,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,
        26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,
        32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,
        37,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,
        43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,47,1,48,1,48,1,
        48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,
        53,1,53,5,53,391,8,53,10,53,12,53,394,9,53,1,54,1,54,1,55,1,55,1,
        56,1,56,1,57,1,57,1,58,4,58,405,8,58,11,58,12,58,406,1,58,1,58,1,
        59,1,59,1,59,1,59,5,59,415,8,59,10,59,12,59,418,9,59,1,59,1,59,1,
        60,1,60,1,61,1,61,3,61,426,8,61,1,62,1,62,5,62,430,8,62,10,62,12,
        62,433,9,62,1,62,1,62,1,63,1,63,5,63,439,8,63,10,63,12,63,442,9,
        63,1,63,1,63,1,64,1,64,3,64,448,8,64,1,65,1,65,3,65,452,8,65,1,66,
        1,66,1,67,1,67,1,68,1,68,1,68,1,69,1,69,3,69,463,8,69,1,70,1,70,
        1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,
        1,71,1,71,1,71,1,72,1,72,1,72,3,72,486,8,72,1,73,1,73,1,73,1,73,
        3,73,492,8,73,1,74,1,74,3,74,496,8,74,1,74,5,74,499,8,74,10,74,12,
        74,502,9,74,1,74,4,74,505,8,74,11,74,12,74,506,1,74,3,74,510,8,74,
        1,74,5,74,513,8,74,10,74,12,74,516,9,74,3,74,518,8,74,1,75,1,75,
        1,75,3,75,523,8,75,1,75,4,75,526,8,75,11,75,12,75,527,1,76,1,76,
        1,76,3,76,533,8,76,1,76,4,76,536,8,76,11,76,12,76,537,1,77,1,77,
        1,77,3,77,543,8,77,1,77,4,77,546,8,77,11,77,12,77,547,1,78,1,78,
        1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,3,82,560,8,82,1,83,1,83,
        3,83,564,8,83,1,84,3,84,567,8,84,1,84,1,84,1,84,1,84,3,84,573,8,
        84,1,85,1,85,3,85,577,8,85,1,85,1,85,1,86,1,86,3,86,583,8,86,1,86,
        5,86,586,8,86,10,86,12,86,589,9,86,1,87,1,87,1,87,1,88,1,88,3,88,
        596,8,88,1,88,1,88,1,89,1,89,3,89,602,8,89,1,89,1,89,1,90,3,90,607,
        8,90,1,90,1,90,1,91,1,91,1,92,1,92,0,0,93,1,3,3,4,5,5,7,6,9,7,11,
        8,13,9,15,10,17,11,19,12,21,13,23,14,25,15,27,16,29,17,31,18,33,
        19,35,20,37,21,39,22,41,23,43,24,45,25,47,26,49,27,51,28,53,29,55,
        30,57,31,59,32,61,33,63,34,65,35,67,36,69,37,71,38,73,39,75,40,77,
        41,79,42,81,43,83,44,85,45,87,46,89,47,91,48,93,49,95,50,97,51,99,
        52,101,53,103,54,105,55,107,56,109,57,111,58,113,59,115,60,117,61,
        119,62,121,63,123,0,125,0,127,0,129,0,131,0,133,0,135,0,137,0,139,
        0,141,0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,0,161,
        0,163,0,165,0,167,0,169,0,171,0,173,0,175,0,177,0,179,0,181,0,183,
        0,185,0,1,0,16,3,0,9,9,12,12,32,32,2,0,10,10,13,13,2,0,39,39,92,
        92,2,0,34,34,92,92,2,0,66,66,98,98,2,0,79,79,111,111,2,0,88,88,120,
        120,1,0,49,57,1,0,48,57,1,0,48,55,2,0,65,70,97,102,2,0,69,69,101,
        101,2,0,43,43,45,45,2,0,74,74,106,106,3,0,65,90,95,95,97,122,4,0,
        48,57,65,90,95,95,97,122,617,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
        57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
        67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,
        77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,
        87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,
        97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
        0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,
        1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,1,187,1,0,0,0,
        3,191,1,0,0,0,5,194,1,0,0,0,7,200,1,0,0,0,9,203,1,0,0,0,11,209,1,
        0,0,0,13,218,1,0,0,0,15,223,1,0,0,0,17,230,1,0,0,0,19,236,1,0,0,
        0,21,240,1,0,0,0,23,243,1,0,0,0,25,250,1,0,0,0,27,253,1,0,0,0,29,
        259,1,0,0,0,31,266,1,0,0,0,33,270,1,0,0,0,35,273,1,0,0,0,37,280,
        1,0,0,0,39,287,1,0,0,0,41,294,1,0,0,0,43,297,1,0,0,0,45,302,1,0,
        0,0,47,307,1,0,0,0,49,311,1,0,0,0,51,317,1,0,0,0,53,323,1,0,0,0,
        55,325,1,0,0,0,57,327,1,0,0,0,59,329,1,0,0,0,61,331,1,0,0,0,63,333,
        1,0,0,0,65,335,1,0,0,0,67,337,1,0,0,0,69,340,1,0,0,0,71,343,1,0,
        0,0,73,346,1,0,0,0,75,349,1,0,0,0,77,352,1,0,0,0,79,354,1,0,0,0,
        81,356,1,0,0,0,83,358,1,0,0,0,85,360,1,0,0,0,87,362,1,0,0,0,89,364,
        1,0,0,0,91,366,1,0,0,0,93,368,1,0,0,0,95,370,1,0,0,0,97,373,1,0,
        0,0,99,376,1,0,0,0,101,379,1,0,0,0,103,382,1,0,0,0,105,385,1,0,0,
        0,107,388,1,0,0,0,109,395,1,0,0,0,111,397,1,0,0,0,113,399,1,0,0,
        0,115,401,1,0,0,0,117,404,1,0,0,0,119,410,1,0,0,0,121,421,1,0,0,
        0,123,425,1,0,0,0,125,427,1,0,0,0,127,436,1,0,0,0,129,447,1,0,0,
        0,131,451,1,0,0,0,133,453,1,0,0,0,135,455,1,0,0,0,137,457,1,0,0,
        0,139,462,1,0,0,0,141,464,1,0,0,0,143,474,1,0,0,0,145,485,1,0,0,
        0,147,491,1,0,0,0,149,517,1,0,0,0,151,519,1,0,0,0,153,529,1,0,0,
        0,155,539,1,0,0,0,157,549,1,0,0,0,159,551,1,0,0,0,161,553,1,0,0,
        0,163,555,1,0,0,0,165,559,1,0,0,0,167,563,1,0,0,0,169,572,1,0,0,
        0,171,576,1,0,0,0,173,580,1,0,0,0,175,590,1,0,0,0,177,593,1,0,0,
        0,179,601,1,0,0,0,181,606,1,0,0,0,183,610,1,0,0,0,185,612,1,0,0,
        0,187,188,5,97,0,0,188,189,5,110,0,0,189,190,5,100,0,0,190,2,1,0,
        0,0,191,192,5,97,0,0,192,193,5,115,0,0,193,4,1,0,0,0,194,195,5,98,
        0,0,195,196,5,114,0,0,196,197,5,101,0,0,197,198,5,97,0,0,198,199,
        5,107,0,0,199,6,1,0,0,0,200,201,5,98,0,0,201,202,5,121,0,0,202,8,
        1,0,0,0,203,204,5,99,0,0,204,205,5,111,0,0,205,206,5,110,0,0,206,
        207,5,115,0,0,207,208,5,116,0,0,208,10,1,0,0,0,209,210,5,99,0,0,
        210,211,5,111,0,0,211,212,5,110,0,0,212,213,5,116,0,0,213,214,5,
        105,0,0,214,215,5,110,0,0,215,216,5,117,0,0,216,217,5,101,0,0,217,
        12,1,0,0,0,218,219,5,101,0,0,219,220,5,108,0,0,220,221,5,115,0,0,
        221,222,5,101,0,0,222,14,1,0,0,0,223,224,5,101,0,0,224,225,5,120,
        0,0,225,226,5,112,0,0,226,227,5,111,0,0,227,228,5,114,0,0,228,229,
        5,116,0,0,229,16,1,0,0,0,230,231,5,102,0,0,231,232,5,97,0,0,232,
        233,5,108,0,0,233,234,5,115,0,0,234,235,5,101,0,0,235,18,1,0,0,0,
        236,237,5,102,0,0,237,238,5,111,0,0,238,239,5,114,0,0,239,20,1,0,
        0,0,240,241,5,105,0,0,241,242,5,102,0,0,242,22,1,0,0,0,243,244,5,
        105,0,0,244,245,5,109,0,0,245,246,5,112,0,0,246,247,5,111,0,0,247,
        248,5,114,0,0,248,249,5,116,0,0,249,24,1,0,0,0,250,251,5,105,0,0,
        251,252,5,110,0,0,252,26,1,0,0,0,253,254,5,105,0,0,254,255,5,110,
        0,0,255,256,5,112,0,0,256,257,5,117,0,0,257,258,5,116,0,0,258,28,
        1,0,0,0,259,260,5,109,0,0,260,261,5,101,0,0,261,262,5,116,0,0,262,
        263,5,104,0,0,263,264,5,111,0,0,264,265,5,100,0,0,265,30,1,0,0,0,
        266,267,5,110,0,0,267,268,5,111,0,0,268,269,5,116,0,0,269,32,1,0,
        0,0,270,271,5,111,0,0,271,272,5,114,0,0,272,34,1,0,0,0,273,274,5,
        115,0,0,274,275,5,101,0,0,275,276,5,114,0,0,276,277,5,105,0,0,277,
        278,5,101,0,0,278,279,5,115,0,0,279,36,1,0,0,0,280,281,5,115,0,0,
        281,282,5,105,0,0,282,283,5,109,0,0,283,284,5,112,0,0,284,285,5,
        108,0,0,285,286,5,101,0,0,286,38,1,0,0,0,287,288,5,115,0,0,288,289,
        5,119,0,0,289,290,5,105,0,0,290,291,5,116,0,0,291,292,5,99,0,0,292,
        293,5,104,0,0,293,40,1,0,0,0,294,295,5,116,0,0,295,296,5,111,0,0,
        296,42,1,0,0,0,297,298,5,116,0,0,298,299,5,121,0,0,299,300,5,112,
        0,0,300,301,5,101,0,0,301,44,1,0,0,0,302,303,5,116,0,0,303,304,5,
        114,0,0,304,305,5,117,0,0,305,306,5,101,0,0,306,46,1,0,0,0,307,308,
        5,118,0,0,308,309,5,97,0,0,309,310,5,114,0,0,310,48,1,0,0,0,311,
        312,5,118,0,0,312,313,5,97,0,0,313,314,5,114,0,0,314,315,5,105,0,
        0,315,316,5,112,0,0,316,50,1,0,0,0,317,318,5,119,0,0,318,319,5,104,
        0,0,319,320,5,105,0,0,320,321,5,108,0,0,321,322,5,101,0,0,322,52,
        1,0,0,0,323,324,5,40,0,0,324,54,1,0,0,0,325,326,5,41,0,0,326,56,
        1,0,0,0,327,328,5,91,0,0,328,58,1,0,0,0,329,330,5,93,0,0,330,60,
        1,0,0,0,331,332,5,60,0,0,332,62,1,0,0,0,333,334,5,62,0,0,334,64,
        1,0,0,0,335,336,5,61,0,0,336,66,1,0,0,0,337,338,5,61,0,0,338,339,
        5,61,0,0,339,68,1,0,0,0,340,341,5,33,0,0,341,342,5,61,0,0,342,70,
        1,0,0,0,343,344,5,60,0,0,344,345,5,61,0,0,345,72,1,0,0,0,346,347,
        5,62,0,0,347,348,5,61,0,0,348,74,1,0,0,0,349,350,5,61,0,0,350,351,
        5,62,0,0,351,76,1,0,0,0,352,353,5,46,0,0,353,78,1,0,0,0,354,355,
        5,44,0,0,355,80,1,0,0,0,356,357,5,58,0,0,357,82,1,0,0,0,358,359,
        5,63,0,0,359,84,1,0,0,0,360,361,5,43,0,0,361,86,1,0,0,0,362,363,
        5,45,0,0,363,88,1,0,0,0,364,365,5,42,0,0,365,90,1,0,0,0,366,367,
        5,47,0,0,367,92,1,0,0,0,368,369,5,37,0,0,369,94,1,0,0,0,370,371,
        5,43,0,0,371,372,5,61,0,0,372,96,1,0,0,0,373,374,5,45,0,0,374,375,
        5,61,0,0,375,98,1,0,0,0,376,377,5,42,0,0,377,378,5,61,0,0,378,100,
        1,0,0,0,379,380,5,47,0,0,380,381,5,61,0,0,381,102,1,0,0,0,382,383,
        5,37,0,0,383,384,5,61,0,0,384,104,1,0,0,0,385,386,5,58,0,0,386,387,
        5,61,0,0,387,106,1,0,0,0,388,392,3,183,91,0,389,391,3,185,92,0,390,
        389,1,0,0,0,391,394,1,0,0,0,392,390,1,0,0,0,392,393,1,0,0,0,393,
        108,1,0,0,0,394,392,1,0,0,0,395,396,3,145,72,0,396,110,1,0,0,0,397,
        398,3,123,61,0,398,112,1,0,0,0,399,400,3,139,69,0,400,114,1,0,0,
        0,401,402,3,181,90,0,402,116,1,0,0,0,403,405,7,0,0,0,404,403,1,0,
        0,0,405,406,1,0,0,0,406,404,1,0,0,0,406,407,1,0,0,0,407,408,1,0,
        0,0,408,409,6,58,0,0,409,118,1,0,0,0,410,411,5,47,0,0,411,412,5,
        47,0,0,412,416,1,0,0,0,413,415,8,1,0,0,414,413,1,0,0,0,415,418,1,
        0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,419,1,0,0,0,418,416,1,
        0,0,0,419,420,6,59,1,0,420,120,1,0,0,0,421,422,9,0,0,0,422,122,1,
        0,0,0,423,426,3,125,62,0,424,426,3,127,63,0,425,423,1,0,0,0,425,
        424,1,0,0,0,426,124,1,0,0,0,427,431,5,39,0,0,428,430,3,129,64,0,
        429,428,1,0,0,0,430,433,1,0,0,0,431,429,1,0,0,0,431,432,1,0,0,0,
        432,434,1,0,0,0,433,431,1,0,0,0,434,435,5,39,0,0,435,126,1,0,0,0,
        436,440,5,34,0,0,437,439,3,131,65,0,438,437,1,0,0,0,439,442,1,0,
        0,0,440,438,1,0,0,0,440,441,1,0,0,0,441,443,1,0,0,0,442,440,1,0,
        0,0,443,444,5,34,0,0,444,128,1,0,0,0,445,448,3,133,66,0,446,448,
        3,137,68,0,447,445,1,0,0,0,447,446,1,0,0,0,448,130,1,0,0,0,449,452,
        3,135,67,0,450,452,3,137,68,0,451,449,1,0,0,0,451,450,1,0,0,0,452,
        132,1,0,0,0,453,454,8,2,0,0,454,134,1,0,0,0,455,456,8,3,0,0,456,
        136,1,0,0,0,457,458,5,92,0,0,458,459,9,0,0,0,459,138,1,0,0,0,460,
        463,3,141,70,0,461,463,3,143,71,0,462,460,1,0,0,0,462,461,1,0,0,
        0,463,140,1,0,0,0,464,465,5,35,0,0,465,466,3,165,82,0,466,467,3,
        165,82,0,467,468,3,165,82,0,468,469,3,165,82,0,469,470,3,165,82,
        0,470,471,3,165,82,0,471,472,3,165,82,0,472,473,3,165,82,0,473,142,
        1,0,0,0,474,475,5,35,0,0,475,476,3,165,82,0,476,477,3,165,82,0,477,
        478,3,165,82,0,478,479,3,165,82,0,479,480,3,165,82,0,480,481,3,165,
        82,0,481,144,1,0,0,0,482,486,3,147,73,0,483,486,3,167,83,0,484,486,
        3,179,89,0,485,482,1,0,0,0,485,483,1,0,0,0,485,484,1,0,0,0,486,146,
        1,0,0,0,487,492,3,149,74,0,488,492,3,151,75,0,489,492,3,153,76,0,
        490,492,3,155,77,0,491,487,1,0,0,0,491,488,1,0,0,0,491,489,1,0,0,
        0,491,490,1,0,0,0,492,148,1,0,0,0,493,500,3,157,78,0,494,496,5,95,
        0,0,495,494,1,0,0,0,495,496,1,0,0,0,496,497,1,0,0,0,497,499,3,159,
        79,0,498,495,1,0,0,0,499,502,1,0,0,0,500,498,1,0,0,0,500,501,1,0,
        0,0,501,518,1,0,0,0,502,500,1,0,0,0,503,505,5,48,0,0,504,503,1,0,
        0,0,505,506,1,0,0,0,506,504,1,0,0,0,506,507,1,0,0,0,507,514,1,0,
        0,0,508,510,5,95,0,0,509,508,1,0,0,0,509,510,1,0,0,0,510,511,1,0,
        0,0,511,513,5,48,0,0,512,509,1,0,0,0,513,516,1,0,0,0,514,512,1,0,
        0,0,514,515,1,0,0,0,515,518,1,0,0,0,516,514,1,0,0,0,517,493,1,0,
        0,0,517,504,1,0,0,0,518,150,1,0,0,0,519,520,5,48,0,0,520,525,7,4,
        0,0,521,523,5,95,0,0,522,521,1,0,0,0,522,523,1,0,0,0,523,524,1,0,
        0,0,524,526,3,161,80,0,525,522,1,0,0,0,526,527,1,0,0,0,527,525,1,
        0,0,0,527,528,1,0,0,0,528,152,1,0,0,0,529,530,5,48,0,0,530,535,7,
        5,0,0,531,533,5,95,0,0,532,531,1,0,0,0,532,533,1,0,0,0,533,534,1,
        0,0,0,534,536,3,163,81,0,535,532,1,0,0,0,536,537,1,0,0,0,537,535,
        1,0,0,0,537,538,1,0,0,0,538,154,1,0,0,0,539,540,5,48,0,0,540,545,
        7,6,0,0,541,543,5,95,0,0,542,541,1,0,0,0,542,543,1,0,0,0,543,544,
        1,0,0,0,544,546,3,165,82,0,545,542,1,0,0,0,546,547,1,0,0,0,547,545,
        1,0,0,0,547,548,1,0,0,0,548,156,1,0,0,0,549,550,7,7,0,0,550,158,
        1,0,0,0,551,552,7,8,0,0,552,160,1,0,0,0,553,554,2,48,49,0,554,162,
        1,0,0,0,555,556,7,9,0,0,556,164,1,0,0,0,557,560,3,159,79,0,558,560,
        7,10,0,0,559,557,1,0,0,0,559,558,1,0,0,0,560,166,1,0,0,0,561,564,
        3,169,84,0,562,564,3,171,85,0,563,561,1,0,0,0,563,562,1,0,0,0,564,
        168,1,0,0,0,565,567,3,173,86,0,566,565,1,0,0,0,566,567,1,0,0,0,567,
        568,1,0,0,0,568,573,3,175,87,0,569,570,3,173,86,0,570,571,5,46,0,
        0,571,573,1,0,0,0,572,566,1,0,0,0,572,569,1,0,0,0,573,170,1,0,0,
        0,574,577,3,173,86,0,575,577,3,169,84,0,576,574,1,0,0,0,576,575,
        1,0,0,0,577,578,1,0,0,0,578,579,3,177,88,0,579,172,1,0,0,0,580,587,
        3,159,79,0,581,583,5,95,0,0,582,581,1,0,0,0,582,583,1,0,0,0,583,
        584,1,0,0,0,584,586,3,159,79,0,585,582,1,0,0,0,586,589,1,0,0,0,587,
        585,1,0,0,0,587,588,1,0,0,0,588,174,1,0,0,0,589,587,1,0,0,0,590,
        591,5,46,0,0,591,592,3,173,86,0,592,176,1,0,0,0,593,595,7,11,0,0,
        594,596,7,12,0,0,595,594,1,0,0,0,595,596,1,0,0,0,596,597,1,0,0,0,
        597,598,3,173,86,0,598,178,1,0,0,0,599,602,3,167,83,0,600,602,3,
        173,86,0,601,599,1,0,0,0,601,600,1,0,0,0,602,603,1,0,0,0,603,604,
        7,13,0,0,604,180,1,0,0,0,605,607,5,13,0,0,606,605,1,0,0,0,606,607,
        1,0,0,0,607,608,1,0,0,0,608,609,5,10,0,0,609,182,1,0,0,0,610,611,
        7,14,0,0,611,184,1,0,0,0,612,613,7,15,0,0,613,186,1,0,0,0,34,0,392,
        406,416,425,431,440,447,451,462,485,491,495,500,506,509,514,517,
        522,527,532,537,542,547,559,563,566,572,576,582,587,595,601,606,
        2,0,1,0,0,2,0
    ]

class PinescriptLexer(PinescriptLexerBase):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    COMMENT_CHANNEL = 2

    INDENT = 1
    DEDENT = 2
    AND = 3
    AS = 4
    BREAK = 5
    BY = 6
    CONST = 7
    CONTINUE = 8
    ELSE = 9
    EXPORT = 10
    FALSE = 11
    FOR = 12
    IF = 13
    IMPORT = 14
    IN = 15
    INPUT = 16
    METHOD = 17
    NOT = 18
    OR = 19
    SERIES = 20
    SIMPLE = 21
    SWITCH = 22
    TO = 23
    TYPE = 24
    TRUE = 25
    VAR = 26
    VARIP = 27
    WHILE = 28
    LPAR = 29
    RPAR = 30
    LSQB = 31
    RSQB = 32
    LESS = 33
    GREATER = 34
    EQUAL = 35
    EQEQUAL = 36
    NOTEQUAL = 37
    LESSEQUAL = 38
    GREATEREQUAL = 39
    RARROW = 40
    DOT = 41
    COMMA = 42
    COLON = 43
    QUESTION = 44
    PLUS = 45
    MINUS = 46
    STAR = 47
    SLASH = 48
    PERCENT = 49
    PLUSEQUAL = 50
    MINEQUAL = 51
    STAREQUAL = 52
    SLASHEQUAL = 53
    PERCENTEQUAL = 54
    COLONEQUAL = 55
    NAME = 56
    NUMBER = 57
    STRING = 58
    COLOR = 59
    NEWLINE = 60
    WS = 61
    COMMENT = 62
    ERROR_TOKEN = 63

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN", u"COMMENT_CHANNEL" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'and'", "'as'", "'break'", "'by'", "'const'", "'continue'", 
            "'else'", "'export'", "'false'", "'for'", "'if'", "'import'", 
            "'in'", "'input'", "'method'", "'not'", "'or'", "'series'", 
            "'simple'", "'switch'", "'to'", "'type'", "'true'", "'var'", 
            "'varip'", "'while'", "'('", "')'", "'['", "']'", "'<'", "'>'", 
            "'='", "'=='", "'!='", "'<='", "'>='", "'=>'", "'.'", "','", 
            "':'", "'?'", "'+'", "'-'", "'*'", "'/'", "'%'", "'+='", "'-='", 
            "'*='", "'/='", "'%='", "':='" ]

    symbolicNames = [ "<INVALID>",
            "INDENT", "DEDENT", "AND", "AS", "BREAK", "BY", "CONST", "CONTINUE", 
            "ELSE", "EXPORT", "FALSE", "FOR", "IF", "IMPORT", "IN", "INPUT", 
            "METHOD", "NOT", "OR", "SERIES", "SIMPLE", "SWITCH", "TO", "TYPE", 
            "TRUE", "VAR", "VARIP", "WHILE", "LPAR", "RPAR", "LSQB", "RSQB", 
            "LESS", "GREATER", "EQUAL", "EQEQUAL", "NOTEQUAL", "LESSEQUAL", 
            "GREATEREQUAL", "RARROW", "DOT", "COMMA", "COLON", "QUESTION", 
            "PLUS", "MINUS", "STAR", "SLASH", "PERCENT", "PLUSEQUAL", "MINEQUAL", 
            "STAREQUAL", "SLASHEQUAL", "PERCENTEQUAL", "COLONEQUAL", "NAME", 
            "NUMBER", "STRING", "COLOR", "NEWLINE", "WS", "COMMENT", "ERROR_TOKEN" ]

    ruleNames = [ "AND", "AS", "BREAK", "BY", "CONST", "CONTINUE", "ELSE", 
                  "EXPORT", "FALSE", "FOR", "IF", "IMPORT", "IN", "INPUT", 
                  "METHOD", "NOT", "OR", "SERIES", "SIMPLE", "SWITCH", "TO", 
                  "TYPE", "TRUE", "VAR", "VARIP", "WHILE", "LPAR", "RPAR", 
                  "LSQB", "RSQB", "LESS", "GREATER", "EQUAL", "EQEQUAL", 
                  "NOTEQUAL", "LESSEQUAL", "GREATEREQUAL", "RARROW", "DOT", 
                  "COMMA", "COLON", "QUESTION", "PLUS", "MINUS", "STAR", 
                  "SLASH", "PERCENT", "PLUSEQUAL", "MINEQUAL", "STAREQUAL", 
                  "SLASHEQUAL", "PERCENTEQUAL", "COLONEQUAL", "NAME", "NUMBER", 
                  "STRING", "COLOR", "NEWLINE", "WS", "COMMENT", "ERROR_TOKEN", 
                  "STRING_LITERAL", "SINGLE_QUOTED_STRING", "DOUBLE_QUOTED_STRING", 
                  "STRING_ITEM_FOR_SINGLE_QUOTE", "STRING_ITEM_FOR_DOUBLE_QUOTE", 
                  "STRING_CHAR_NO_SINGLE_QUOTE", "STRING_CHAR_NO_DOUBLE_QUOTE", 
                  "STRING_ESCAPE_SEQ", "COLOR_LITERAL", "COLOR_LITERAL_RGBA", 
                  "COLOR_LITERAL_RGB", "NUMBER_LITERAL", "INTEGER", "DEC_INTEGER", 
                  "BIN_INTEGER", "OCT_INTEGER", "HEX_INTEGER", "NON_ZERO_DIGIT", 
                  "DIGIT", "BIN_DIGIT", "OCT_DIGIT", "HEX_DIGIT", "FLOAT_NUMBER", 
                  "POINT_FLOAT", "EXPONENT_FLOAT", "DIGIT_PART", "FRACTION", 
                  "EXPONENT", "IMAG_NUMBER", "OS_INDEPENDENT_NL", "ID_START", 
                  "ID_CONTINUE" ]

    grammarFileName = "PinescriptLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


